<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~ 
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~ 
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.apache.linkis.configuration.dao.AcrossClusterRuleMapper">

    <resultMap id="acrossClusterRuleMap" type="org.apache.linkis.configuration.entity.AcrossClusterRule">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="clusterName" column="cluster_name" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="rules" column="rules" jdbcType="VARCHAR"/>
        <result property="isValid" column="is_valid" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="AcrossClusterRule_Column_List">
        id,cluster_name,creator,username,create_time,create_by,update_time,update_by,rules,is_valid
    </sql>

    <sql id="AcrossClusterRule_insert_Column_List">
        cluster_name,creator,username,create_time,create_by,update_time,update_by,rules,is_valid
    </sql>

    <select id="getAcrossClusterRule" resultMap="acrossClusterRuleMap">
        SELECT
            acr.id, acr.cluster_name, acr.creator,
            acr.username, acr.create_time, acr.create_by,
            acr.update_time, acr.update_by, acr.rules
        FROM
            `linkis_ps_configuration_across_cluster_rule` acr
        WHERE
            id = #{id}
            <if test="username != null">and username = #{username}</if>
    </select>

    <select id="queryAcrossClusterRuleList" resultMap="acrossClusterRuleMap">
        SELECT <include refid="AcrossClusterRule_Column_List"/>
        FROM `linkis_ps_configuration_across_cluster_rule`
        <where>
            <if test="username != null"> username = #{username}</if>
            <if test="creator != null">and creator = #{creator}</if>
            <if test="clusterName != null">and cluster_name = #{clusterName}</if>
            <if test="isValid != null">and is_valid = #{isValid}</if>
        </where>
        ORDER BY create_time DESC
    </select>


    <insert id="insertAcrossClusterRule" parameterType="org.apache.linkis.configuration.entity.AcrossClusterRule">
        INSERT INTO
            linkis_ps_configuration_across_cluster_rule (<include refid="AcrossClusterRule_insert_Column_List"/>)
        VALUES
            (#{acrossClusterRule.clusterName},#{acrossClusterRule.creator}, #{acrossClusterRule.username},
            <choose>
                <when test="acrossClusterRule.createTime != null">
                    #{acrossClusterRule.createTime}
                </when>
                <otherwise>
                    now()
                </otherwise>
            </choose>,
            #{acrossClusterRule.createBy},
            <choose>
                <when test="acrossClusterRule.updateTime != null">
                    #{acrossClusterRule.updateTime}
                </when>
                <otherwise>
                    now()
                </otherwise>
            </choose>,
            #{acrossClusterRule.updateBy},#{acrossClusterRule.rules}, #{acrossClusterRule.isValid})
    </insert>

    <delete id="deleteAcrossClusterRule">
        DELETE
        FROM
            `linkis_ps_configuration_across_cluster_rule`
        WHERE
            id = #{id}
    </delete>

    <delete id="deleteAcrossClusterRuleByBatch">
        DELETE
        FROM
            `linkis_ps_configuration_across_cluster_rule`
        WHERE
            id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteAcrossClusterRuleByUsername">
        DELETE
        FROM
            `linkis_ps_configuration_across_cluster_rule`
        WHERE
            username = #{username}
    </delete>

    <delete id="deleteAcrossClusterRuleByCrossQueue">
        DELETE
        FROM
            `linkis_ps_configuration_across_cluster_rule`
        WHERE
            rules
        LIKE CONCAT('%',#{crossQueue},'%')
    </delete>

    <update id="updateAcrossClusterRule" parameterType="org.apache.linkis.configuration.entity.AcrossClusterRule">
        UPDATE
            `linkis_ps_configuration_across_cluster_rule`
        SET
            cluster_name = #{acrossClusterRule.clusterName}, creator = #{acrossClusterRule.creator},
            username=#{acrossClusterRule.username}, create_time=#{acrossClusterRule.createTime},
            create_By=#{acrossClusterRule.createBy},
            <choose>
                <when test="acrossClusterRule.updateTime != null">
                    update_time=#{acrossClusterRule.updateTime}
                </when>
                <otherwise>
                    update_time = now()
                </otherwise>
            </choose>,
            update_By=#{acrossClusterRule.updateBy}, rules=#{acrossClusterRule.rules},
            is_valid=#{acrossClusterRule.isValid}
        WHERE
            id = #{acrossClusterRule.id}
    </update>

    <update id="updateAcrossClusterRuleByBatch" parameterType="org.apache.linkis.configuration.entity.AcrossClusterRule">
        UPDATE
            `linkis_ps_configuration_across_cluster_rule`
        SET
            cluster_name = #{acrossClusterRule.clusterName}, creator = #{acrossClusterRule.creator},
        <choose>
            <when test="acrossClusterRule.updateTime != null">
                update_time=#{acrossClusterRule.updateTime}
            </when>
            <otherwise>
                update_time = now()
            </otherwise>
        </choose>,
            update_By=#{acrossClusterRule.updateBy}, rules=#{acrossClusterRule.rules},
            is_valid=#{acrossClusterRule.isValid}
        WHERE
            id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="validAcrossClusterRule">
        UPDATE
            `linkis_ps_configuration_across_cluster_rule`
        SET
            is_valid = #{isValid}
        WHERE
            id = #{id}
            <if test="username != null">and username = #{username}</if>
    </update>

    <update id="validAcrossClusterRuleByBatch">
        UPDATE
            `linkis_ps_configuration_across_cluster_rule`
        SET
            is_valid = #{isValid}
        WHERE
            id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
        </foreach>
    </update>

    <select id="queryAcrossClusterRuleByUserName" resultMap="acrossClusterRuleMap">
        SELECT
        acr.id, acr.cluster_name, acr.creator,
        acr.username, acr.create_time, acr.create_by,
        acr.update_time, acr.update_by, acr.rules
        FROM
        `linkis_ps_configuration_across_cluster_rule` acr
        WHERE
        username = #{username} limit 1
    </select>
</mapper>