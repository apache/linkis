<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~ 
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~ 
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!--DBS-->
<!--Primiry key  BD_ID-->
<!--unique  name-->

<!--TBLS-->
<!--Primiry key TBL_ID-->
<!--unique (TBL_NAME,DB_ID)-->

<!--PARTITIONS-->
<!--Primiry key PART_ID-->
<!--unique(PART_NAME,TBL_ID)-->


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.apache.linkis.metadata.hive.dao.HiveMetaDao">

    <select id="getLocationByDbAndTable" resultType="java.lang.String" parameterType="map">
        select SDS.LOCATION  FROM SDS
        inner join TBLS ON SDS.SD_ID = TBLS.SD_ID
        inner join `DBS` ON TBLS.DB_ID=`DBS`.DB_ID
        where  TBLS.TBL_NAME = #{tableName,jdbcType=VARCHAR}
          and `DBS`.NAME = #{dbName,jdbcType=VARCHAR};
    </select>

    <select id="getStorageInfo" resultType="map" parameterType="map">
        select SDS.INPUT_FORMAT as inputFormat, SDS.OUTPUT_FORMAT as outputFormat FROM SDS
        inner join TBLS ON SDS.SD_ID = TBLS.SD_ID
        inner join `DBS` ON TBLS.DB_ID=`DBS`.DB_ID
        where  TBLS.TBL_NAME = #{tableName,jdbcType=VARCHAR}
          and `DBS`.NAME = #{dbName,jdbcType=VARCHAR};
    </select>

    <select id="getRolesByUser" resultType="java.lang.String" parameterType="map">
        SELECT ROLE_NAME
        FROM ROLES r INNER JOIN ROLE_MAP rm
            ON r.ROLE_ID = rm.ROLE_ID
            and rm.PRINCIPAL_TYPE = 'USER'
            and rm.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR}
    </select>

    <select id="getDbsByUserAndRoles" resultType="java.lang.String">
        select NAME
        from DBS
        where (OWNER_TYPE = 'USER' AND OWNER_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
        OR (OWNER_TYPE = 'ROLE' AND OWNER_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
               #{id}
            </foreach>)
        </if>
        union
        select t2.NAME as NAME
        from DB_PRIVS t1
            INNER JOIN DBS t2 ON t1.DB_ID = t2.DB_ID and t1.DB_PRIV in ('SELECT', 'ALL')
        where (t1.PRINCIPAL_TYPE = 'USER' AND t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        union
        select t3.NAME as NAME
        from TBL_PRIVS t1
                INNER JOIN TBLS t2 ON t1.TBL_ID = t2.TBL_ID and t1.TBL_PRIV in ('SELECT', 'ALL')
                INNER JOIN DBS t3 ON t2.DB_ID = t3.DB_ID
        where (t1.PRINCIPAL_TYPE = 'USER' AND t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        ORDER BY NAME
    </select>

    <select id="getAllDbs" resultType="java.lang.String">
        select NAME from DBS
        GROUP BY NAME
        order by NAME
    </select>
    <select id="getTablesByDbNameAndUserAndRolesFromDbPrvs" resultType="map" parameterType="map">
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME, t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER
        from DB_PRIVS t1
            inner join TBLS t2 on t1.DB_ID = t2.DB_ID and t1.DB_PRIV in ('SELECT','ALL')
            inner join DBS t3 on t1.DB_ID= t3.DB_ID and t3.NAME = #{dbName,jdbcType=VARCHAR}
        where  (t1.PRINCIPAL_TYPE = 'USER' and t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        order by NAME;
    </select>
    <select id="getTablesByDbNameAndUserAndRolesFromTblPrvs" resultType="map" parameterType="map">
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME, t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER
        from TBL_PRIVS t1
            inner join TBLS t2 on t1.TBL_ID=t2.TBL_ID and t1.TBL_PRIV in ('SELECT','ALL')
            inner join DBS t3 on t2.DB_ID=t3.DB_ID and t3.NAME = #{dbName,jdbcType=VARCHAR}
        where  (t1.PRINCIPAL_TYPE = 'USER' and t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        order by NAME;
    </select>

    <select id="getTablesByDbName" resultType="map"  parameterType="map">
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME,
                t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER
        from TBLS t2 inner join DBS t3 on t2.DB_ID = t3.DB_ID
        where t3.NAME = #{dbName,jdbcType=VARCHAR}
        order by t2.TBL_NAME;
    </select>


    <select id="getTableInfoByTableNameAndDbName" resultType="map">
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME,
               t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER
        from TBLS t2
        where t2.TBL_NAME=#{tableName,jdbcType=VARCHAR}
        and t2.DB_ID=(select DB_ID from DBS t3 where t3.NAME = #{dbName,jdbcType=VARCHAR})
    </select>


    <select id="getPartitionSize" resultType="java.lang.Long"  parameterType="map">
        select PARTITION_PARAMS.PARAM_VALUE from PARTITION_PARAMS
        inner join `PARTITIONS` ON `PARTITIONS`.PART_ID=PARTITION_PARAMS.PART_ID
        inner join TBLS ON `PARTITIONS`.TBL_ID = TBLS.TBL_ID
        inner join `DBS` ON TBLS.DB_ID=`DBS`.DB_ID
        where PARTITION_PARAMS.PARAM_KEY = 'totalSize'
        and  `PARTITIONS`.PART_NAME =  #{partitionName,jdbcType=VARCHAR}
        and  TBLS.TBL_NAME = #{tableName,jdbcType=VARCHAR}
        and `DBS`.NAME =  #{dbName,jdbcType=VARCHAR};

    </select>

    <select id="getPartitions" resultType="java.lang.String"  parameterType="map">
        select `PARTITIONS`.PART_NAME from `PARTITIONS`
        inner join TBLS ON `PARTITIONS`.TBL_ID = TBLS.TBL_ID
        inner join `DBS` ON TBLS.DB_ID=`DBS`.DB_ID
        where  TBLS.TBL_NAME = #{tableName,jdbcType=VARCHAR}
        and `DBS`.NAME =#{dbName,jdbcType=VARCHAR};
    </select>

    <select id="getColumns" resultType="map"  parameterType="map">
        SELECT COMMENT, COLUMN_NAME, TYPE_NAME FROM COLUMNS_V2
        where CD_ID in(
            select CD_ID from SDS where SD_ID = (
                select SD_ID from `TBLS`
                where TBL_NAME = #{tableName,jdbcType=VARCHAR}
                and DB_ID = (select DB_ID from `DBS` where NAME = #{dbName,jdbcType=VARCHAR})
            )
        ) order by INTEGER_IDX asc;
    </select>

    <select id="getStorageDescriptionIDByDbTableNameAndUser" resultType="map"  parameterType="map">
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME, t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER, t2.SD_ID as SD_ID
        from DB_PRIVS t1
            inner join TBLS t2 on t1.DB_ID = t2.DB_ID and t1.DB_PRIV in ('SELECT','ALL') and t2.TBL_NAME = #{tableName,jdbcType=VARCHAR}
            inner join DBS t3 on t1.DB_ID = t3.DB_ID and t3.NAME = #{dbName,jdbcType=VARCHAR}
        where  (t1.PRINCIPAL_TYPE = 'USER' and t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        union
        select t2.TBL_NAME as NAME, t2.TBL_TYPE as TYPE, t2.CREATE_TIME as CREATE_TIME, t2.LAST_ACCESS_TIME as LAST_ACCESS_TIME, t2.OWNER as OWNER, t2.SD_ID as SD_ID
        from TBL_PRIVS t1
            inner join TBLS t2 on t1.TBL_ID = t2.TBL_ID and t1.TBL_PRIV in ('SELECT','ALL') and t2.TBL_NAME = #{tableName,jdbcType=VARCHAR}
            inner join DBS t3 on t2.DB_ID=t3.DB_ID and t3.NAME = #{dbName,jdbcType=VARCHAR}
        where  (t1.PRINCIPAL_TYPE = 'USER' and t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR})
        <if test="roles != null and roles.size() > 0">
            OR (t1.PRINCIPAL_TYPE = 'ROLE' AND t1.PRINCIPAL_NAME IN
            <foreach collection="roles" item="id" index="index" open="(" close=")" separator=",">
                #{id}
            </foreach>)
        </if>
        order by NAME;
    </select>

    <select id="getColumnsByStorageDescriptionID" resultType="map"  parameterType="map">
        SELECT COMMENT, COLUMN_NAME, TYPE_NAME FROM COLUMNS_V2
        where CD_ID in(
            select CD_ID from SDS where SD_ID = #{sdId,jdbcType=VARCHAR}
        ) order by INTEGER_IDX asc;
    </select>

    <select id="getPartitionKeys" resultType="map"  parameterType="map">
        select  PKEY_COMMENT, PKEY_NAME, PKEY_TYPE from PARTITION_KEYS
        inner join TBLS ON `PARTITION_KEYS`.TBL_ID = TBLS.TBL_ID
        inner join `DBS` ON TBLS.DB_ID=`DBS`.DB_ID
        where TBLS.TBL_NAME = #{tableName,jdbcType=VARCHAR}
        and `DBS`.NAME =#{dbName,jdbcType=VARCHAR} order by integer_idx;
    </select>

    <select id="getTableComment" resultType="java.lang.String">
        SELECT
        tp.PARAM_VALUE
        FROM
        `DBS` d
        LEFT JOIN `TBLS` t ON d.DB_ID = t.DB_ID
        LEFT JOIN `TABLE_PARAMS` tp ON t.TBL_ID = tp.TBL_ID
        WHERE
        tp.PARAM_KEY = 'comment'
        AND d.`NAME` = #{DbName}
        AND t.TBL_NAME = #{tableName}
    </select>

    <select id="getCanWriteDbsByUser" resultType="java.lang.String">
        SELECT
            t2.NAME AS NAME
        FROM
            `DB_PRIVS` t1
        INNER JOIN `DBS` t2 ON t1.DB_ID = t2.DB_ID AND t1.DB_PRIV IN ('CREATE', 'UPDATE', 'ALL')
        WHERE t1.PRINCIPAL_TYPE = 'USER' AND t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR}
        UNION
        SELECT
            t3.NAME AS NAME
        FROM
            `TBL_PRIVS` t1
        INNER JOIN `TBLS` t2 ON t1.TBL_ID = t2.TBL_ID AND t1.TBL_PRIV IN ('CREATE', 'UPDATE', 'ALL')
        INNER JOIN `DBS` t3 ON t2.DB_ID = t3.DB_ID
        WHERE
            t1.PRINCIPAL_NAME = #{userName,jdbcType=VARCHAR}
        ORDER BY NAME
    </select>
</mapper>
